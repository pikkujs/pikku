name: Main

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: corepack enable
        shell: bash
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn
      - run: yarn install
      - run: yarn build
      - run: yarn test:coverage
      - run: yarn prettier
      - run: yarn lint
      - run: cd templates/functions && yarn pikku && cd ../..
      # - run: yarn typedoc

      - name: Save build output (for later jobs)
        uses: actions/upload-artifact@v4
        with:
          name: built-packages
          path: packages/**/dist
          retention-days: 1

      - name: Coveralls GitHub Action
        uses: coverallsapp/github-action@v2.3.4

  templates:
    name: Templates
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        version: [20]
        template: [
            # express,
            express-middleware,
            # fastify,
            fastify-plugin,
            uws,
            # aws-lambda,
            cloudflare-workers,
            nextjs,
            # mcp-server,
          ]
        package-manager: [yarn]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: corepack enable
        shell: bash
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.version }}
          cache: yarn
      - name: Download built packages
        uses: actions/download-artifact@v4
        with:
          name: built-packages
          path: packages
      - name: Install dependencies for create
        run: yarn install # TODO: This should only need to install create
      - run: cd packages/create && node ./dist/index.js --template ${{ matrix.template }} --version ${{ github.ref_name }} --name ../../../test-app --install --package-manager ${{ matrix.package-manager}} --yarn-link ../pikku
      - run: cd ../test-app && yarn link -A ../pikku && yarn install && yarn run tsc && yarn run test
    env:
      SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
      USES_WEBSOCKET: ${{ matrix.template }}

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: templates
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: corepack enable
        shell: bash
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn
      - run: yarn install
      - run: yarn build
      - run: cd templates/functions && yarn pikku && cd ../..

      - name: Create Release Pull Request
        uses: changesets/action@v1
        with:
          version: node .github/changeset-version.cjs
          publish: yarn release
          createGithubReleases: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  # bun-templates:
  #   name: Bun Templates
  #   runs-on: ubuntu-latest
  #   needs: release
  #   strategy:
  #     matrix:
  #       template: [
  #           # express,
  #           express-middleware,
  #           # fastify,
  #           fastify-plugin,
  #           uws,
  #           aws-lambda,
  #           cloudflare-workers,
  #           nextjs,
  #         ]
  #   steps:
  #     - name: Check out repository code
  #       uses: actions/checkout@v4
  #     - run: corepack enable
  #       shell: bash
  #     - uses: oven-sh/setup-bun@v2
  #       with:
  #         bun-version: latest
  #     - name: Download built packages
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: built-packages
  #         path: packages
  #     - name: Install dependencies for create
  #       run: yarn install # TODO: This should only need to install create
  #     - run: cd packages/create && node ./dist/index.js --template ${{ matrix.template }} --version ${{ github.ref_name }} --name my-app --install --package-manager bun
  #     - run: cd packages/create/my-app && npm run test
  #   env:
  #     SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
  #     USES_WEBSOCKET: ${{ matrix.template }}

  sync-templates:
    name: Sync Templates
    runs-on: ubuntu-latest
    needs: release
    strategy:
      matrix:
        version: [20]
        template: [
            # express,
            express-middleware,
            # fastify,
            fastify-plugin,
            uws,
            # aws-lambda,
            cloudflare-workers,
            nextjs,
            # mcp-server,
          ]
        package-manager: [npm]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Create Template
        run: npm --template ${{ matrix.template }} --version ${{ github.ref_name }} --name ../../../test-app --install --package-manager ${{ matrix.package-manager}}
      
      - name: Sync template repository
        run: ./scripts/sync-template-repos.sh ${{ matrix.template }} --apply --token ${{ env.SYNC_TOKEN_GITHUB }}
        env:
          SYNC_TOKEN_GITHUB: ${{ secrets.SYNC_TOKEN_GITHUB }} 