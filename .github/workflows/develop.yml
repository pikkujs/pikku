name: Main

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: corepack enable
        shell: bash
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn
      - run: yarn install
      - run: yarn build
      - run: yarn test:coverage
      - run: yarn test:verifiers
      - run: yarn prettier
      - run: yarn lint
      - run: cd templates/functions && yarn pikku && cd ../..
      # - run: yarn typedoc

      - name: Save build output (for later jobs)
        uses: actions/upload-artifact@v4
        with:
          name: built-packages
          path: |
            packages/**/dist
            packages/**/bin
          include-hidden-files: true
          retention-days: 1

      - name: Coveralls GitHub Action
        uses: coverallsapp/github-action@v2.3.4
        continue-on-error: true

  templates:
    name: Templates
    runs-on: ubuntu-latest
    needs: build
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: pikku_workspace_starter
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      matrix:
        version: [20]
        template:
          [
            express,
            express-middleware,
            fastify,
            fastify-plugin,
            uws,
            aws-lambda,
            cloudflare-workers,
            nextjs,
            mcp-server,
            pgboss,
            bullmq,
          ]
        package-manager: [yarn]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: corepack enable
        shell: bash
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.version }}
          cache: yarn
      - name: Download built packages
        uses: actions/download-artifact@v4
        with:
          name: built-packages
          path: packages
      - name: Install dependencies for create
        run: yarn install # TODO: This should only need to install create
      - run: cd packages/create && node ./dist/index.js --template ${{ matrix.template }} --version ${{ github.ref_name }} --name ../../../test-app --install --package-manager ${{ matrix.package-manager}} --yarn-link ../pikku
      - run: cd ../test-app && yarn link -A ../pikku && yarn install && yarn run tsc && yarn run test
    env:
      SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}

  bun-templates:
    name: Bun Templates
    runs-on: ubuntu-latest
    needs: templates
    strategy:
      matrix:
        template:
          [
            express,
            express-middleware,
            fastify,
            fastify-plugin,
            uws,
            aws-lambda,
            cloudflare-workers,
            nextjs,
          ]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: corepack enable
        shell: bash
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - name: Download built packages
        uses: actions/download-artifact@v4
        with:
          name: built-packages
          path: packages
      - name: Install dependencies for create
        run: yarn install # TODO: This should only need to install create
      - run: cd packages/create && bun ./dist/index.js --template ${{ matrix.template }} --version ${{ github.ref_name }} --name my-app --install --package-manager bun
      - run: cd packages/create/my-app && bun run test
    env:
      SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
