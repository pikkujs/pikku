import { dirname } from 'path'
import { mkdir, readFile, writeFile } from 'fs/promises'
import { CLILogger } from '../services/cli-logger.service.js'

// TODO: add version back in once the ESM dust settles
export const DO_NOT_MODIFY_COMMENT = `/**
 * This file was generated by the @pikku/cli
 */
`

export const writeFileInDir = async (
  logger: CLILogger,
  path: string,
  content: string,
  {
    ignoreModifyComment = false,
    logWrite = true,
  }: { ignoreModifyComment?: boolean; logWrite?: boolean } = {}
) => {
  if (path.includes('.json')) {
    ignoreModifyComment = true
  }

  if (content.includes('server-only')) {
    content = content.replace(
      "'server-only'",
      `'server-only'\n\n${ignoreModifyComment ? '' : DO_NOT_MODIFY_COMMENT}`
    )
  } else {
    content = `${ignoreModifyComment ? '' : DO_NOT_MODIFY_COMMENT}${content}`
  }

  // Try to read existing file content
  let existingContent: string | undefined
  try {
    existingContent = await readFile(path, 'utf-8')
  } catch (error) {
    // File doesn't exist, so we need to write it
  }

  // Only write if content has changed or file doesn't exist
  if (existingContent !== content) {
    await mkdir(dirname(path), { recursive: true })
    await writeFile(path, content, 'utf-8')

    if (logWrite) {
      logger.info({ message: `âœ“ File written to ${path}`, type: 'success' })
    }
  }
}
