/**
 * This file was generated by @pikku/cli@0.10.0
 */

import { executeCLI, CLIError } from '@pikku/core/cli'
import { createConfig as createConfig } from '../../functions/src/services.js'
import { createSingletonServices as createSingletonServices } from '../../functions/src/services.js'
import { createSessionServices as createSessionServices } from '../../functions/src/services.js'
import '../.pikku/pikku-bootstrap.gen.js'

/**
 * Mycli CLI function
 * Handles command line arguments and executes the appropriate function
 */
export async function MycliCLI(args: string[]): Promise<void> {
  try {
    await executeCLI({
      programName: 'my-cli',
      args: args || process.argv.slice(2),
      createConfig,
      createSingletonServices,
      createSessionServices,
    })
  } catch (error) {
    if (error instanceof CLIError) {
      process.exit(error.exitCode)
    }
    throw error
  }
}

// Export as default for easy importing
export default MycliCLI

// For direct execution (if this file is run directly)
if (import.meta.url === `file://${process.argv[1]}`) {
  MycliCLI(process.argv.slice(2)).catch((error) => {
    console.error('Fatal error:', error.message)
    process.exit(1)
  })
}
