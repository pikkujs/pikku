/**
 * This file was generated by @pikku/cli@0.10.0
 */

import { executeCLIViaChannel } from '@pikku/core/cli/channel'
import { CorePikkuWebsocket } from '@pikku/websocket'
import '../.pikku/pikku-bootstrap.gen.js'
import {
  jsonRenderer,
  greetRenderer,
  calcRenderer,
  userRenderer,
  fileRenderer,
} from '../../functions/src/cli.render.js'

/**
 * Mycli CLI Client (via WebSocket Channel)
 * Executes CLI commands over a WebSocket connection
 */
export async function MycliCLIClient(
  url: string,
  args?: string[]
): Promise<void> {
  // Create WebSocket connection
  const pikkuWS = new CorePikkuWebsocket(url)

  // Register renderers for CLI commands
  const renderers = {
    greet: greetRenderer,
    'calc.add': calcRenderer,
    'calc.subtract': calcRenderer,
    'calc.multiply': calcRenderer,
    'calc.divide': calcRenderer,
    'user.create': userRenderer,
    'user.list': userRenderer,
    file: fileRenderer,
  }

  await executeCLIViaChannel({
    programName: 'my-cli',
    pikkuWS,
    args,
    renderers,
    defaultRenderer: jsonRenderer,
  })
}

// Export as default for easy importing
export default MycliCLIClient

// For direct execution (if this file is run directly)
if (import.meta.url === `file://${process.argv[1]}`) {
  const url = process.env.PIKKU_WS_URL || 'ws://localhost:3000/cli'
  MycliCLIClient(url, process.argv.slice(2)).catch((error) => {
    console.error('Fatal error:', error.message)
    process.exit(1)
  })
}
